Design Principle

General Pourpose:学习设计模式，学习设计Linux API，练习C++
Method：先看书，然后把书放在一边，自己设计，自己实现！（自己做很重要！照着书上敲代码很多时候是敲了也不知道别人为什么那样做！）

CLStatus:
	功能：用来反应函数执行完的状态，包括返回值和出错码。
	为了使得类外部可以直接使用变量名返回出错码 m_lErrorCode, 使用了两个public的const long &引用来实现外部只可以读不可写。
	直接 return CLStatus()对象会减少构造对象的次数，提高效率，故这样写。不要CLStatus A; return A；，这样会增加构造次数。
CLLogger:
	功能：每条日志包含一条日志消息和一个出错码。
	Version 0.1：无缓冲
	CLLogger是一个记录程序出错的日志类，需要读写文件。由于一个程序生命周期内所有记录都写到一个文件中，所以需要数据成员fd。
	又想让它全局唯一，所以把它设计成一个单例模式（Singleton），只能创建一个对象。指针m_pLogger和fd都是全局唯一的，故应该为static。
	单例模式要全局只能创建一个对象，那么构造函数，拷贝构造函数，赋值运算符，析构函数就不能被类外部访问，只能由类本身来控制。
	构造，拷贝构造，赋值运算符都不能被外部访问，那么怎么创建一个对象呢？答案是通过用一个类的函数：static CLLogger * GetInstance();
	有了单例模式来创建对象，每次写日志的时候都需要GetInstance，然后再调用WriteLog写比较麻烦，所以向通过一个封装函数，直接写。
	
	c++语法：
	static 成员要显式初始化，需要写类型，如 int CLLogger::m_Fd = -1。
	在类声明中写了static，在定义时不必写static.