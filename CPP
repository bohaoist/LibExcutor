CLLogger:
	c++语法：
	static数据成员要显式初始化，需要写类型，如 int CLLogger::m_Fd = -1，且一般必须在类定义外初始化static数据成员，只有int例外。
	在类声明中写了static，在定义初始化时不必写static.
	在static成员函数中访问非静态成员必须要通过对象访问，访问静态成员则不用。因为static成员是属于整个类的。
	restrict关键字：C99标准引入，用于修饰指针。表明“指针是访问一个数据对象的唯一且初始的方式。
	”例如：int *restrict pInt = (int *)malloc(4); int *pNewInt = pInt;有了restrict关键字，则所分配的4字节内存只能由pInt来访问，
	第二句中讲pInt赋值给pNewInt是错误的。但编译器不会对这种错误报错（gcc）。所以，restrict的限制只能由程序员来保证。这个关键字的本意是指示
	编译器对代码进行优化的。注意：c++并不支持restrict，不过可以使用“_restrict"。
	赋值构造函数 CLASSA & operator=(const CLASSA & a)要检查自赋值的情况,如果要返回this引用，则必须返回*this，不能直接返回this。
	如果不同的情况都需要相同的处理流程的时候，可以用try-catch来控制程序执行流来控制程序执行流程，而不用goto或带参函数。
	派生类初始化基类时只要用派生类构造函数上加基类构造函数即可，如：class B(int p):A(p){}，其中A是基类构造 
	
	c++ style:
	if( -1 == w )，一定要不左值放在右边，防止不小心写成 if( w = -1)，避免错误
	程序结束后用CLStatus返回执行状态并进行检查是个好习惯！很有必要！避免错误。
	
	编译链接：
	不要在头文件中定义，初始化任何变量。因为头文件会被原封不动的被复制到cpp文件中，这样就可能在链接阶段出现多重定义。头文件只用来声明，
	定义都放在cpp中。头文件声明一个全局变量可以用 extern int i;然后在与该头文件对应的cpp中定义初始化变量。但是const int i = 0则可以定义
	在头文件中。因为常量方法静态数据区，而未初始化的（包括初始化为0的）全局变量放在bss段。
	
	__cdecl:__cdecl 是C Declaration的缩写（declaration，声明），表示C语言默认的函数调用方法：所有参数从右到左依次入栈，这些参数由调用者清除，
	称为手动清栈。被调用函数不会要求调用者传递多少参数，调用者传递过多或者过少的参数，甚至完全不同的参数都不会产生编译阶段的错误。